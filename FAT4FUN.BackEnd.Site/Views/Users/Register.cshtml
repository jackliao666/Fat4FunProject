@model FAT4FUN.BackEnd.Site.Models.ViewModels.RegisterVm

@{
    ViewBag.Title = "Register";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>創建後台使用者</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Gender, "選擇性別", htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.DropDownListFor(model => model.Gender, new SelectList(new[]
                {
                    new { Value = "true", Text = "男性" },
                    new { Value = "false", Text = "女性" }
                }, "Value", "Text"), "請選擇性別", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3 col-md-8">
            @Html.LabelFor(model => model.Roles, "選擇角色", htmlAttributes: new { @class = "form-label col-md-2" })     
                @Html.DropDownListFor(model => model.Roles, new SelectList(ViewBag.Roles, "Value", "Text"), "請選擇角色", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })    
        </div>

        <div class="mb-3 col-md-8">           
                <input type="submit" value="創建" class="btn btn-primary" />            
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
