@model FAT4FUN.BackEnd.Site.Models.ViewModels.RegisterVm

@{
    ViewBag.Title = "Register";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>員工帳號建立</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
        
            @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
        
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3 col-md-10">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label col-md-2" })
        @Html.DropDownListFor(model => model.Gender, new SelectList(new[]
        {
            new { Value = true, Text = "Male" },
            new { Value = false, Text = "Female" }
        }, "Value", "Text"), "Please Select", new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>



    <div class="form-group">
        
            <input type="submit" value="Create" class="btn btn-outline-primary" />
        
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
