@model IEnumerable<FAT4FUN.BackEnd.Site.Models.ViewModels.OrderVm>
@using Newtonsoft.Json

@{
    ViewBag.Title = "訂單管理";
}

<div id="app">
    <div >
        <div >
            <div class="col-md-12">
                <h2 class="text-center mb-4">訂單管理</h2>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <table class="table table-bordered table-hover text-center align-middle">
                    <thead class="thead-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.UserId)</th>
                            <th>@Html.DisplayNameFor(model => model.No)</th>
                            <th>@Html.DisplayNameFor(model => model.TotalAmount)</th>
                            <th>@Html.DisplayNameFor(model => model.Status)</th>
                            <th>@Html.DisplayNameFor(model => model.CreateDate)</th>
                            <th>@Html.DisplayNameFor(model => model.ModifyDate)</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody style="vertical-align: middle;">
                        @foreach (var item in Model)
                        {
                            <tr style="color: black;vertical-align: middle;">
                                <td style="vertical-align: middle;">@Html.DisplayFor(modelItem => item.UserId)</td>
                                <td style="vertical-align: middle;">@Html.DisplayFor(modelItem => item.No)</td>
                                <td class="text-right" style="vertical-align: middle;">@item.TotalAmount.ToString("N0")</td>
                                <td style="vertical-align: middle;">
                                    @{
                                        string statusText;
                                        switch (item.Status)
                                        {
                                            case 1:
                                                statusText = "處理中";
                                                break;
                                            case 2:
                                                statusText = "已出貨";
                                                break;
                                            case 3:
                                                statusText = "已完成";
                                                break;
                                            case 4:
                                                statusText = "已申請退貨";
                                                break;
                                            case 5:
                                                statusText = "已退貨";
                                                break;
                                            case 6:
                                                statusText = "已取消";
                                                break;
                                            default:
                                                statusText = "未知狀態";
                                                break;
                                        }
                                    }
                                    @statusText
                                </td>
                                <td style="vertical-align: middle;">@Html.DisplayFor(modelItem => item.CreateDate)</td>
                                <td style="vertical-align: middle;">@Html.DisplayFor(modelItem => item.ModifyDate)</td>
                                <td style="width:200px">
                                    <!-- 詳情按鈕觸發手風琴 -->
                                    <button class="btn btn-info btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#orderItems-@item.Id" aria-expanded="false" aria-controls="orderItems-@item.Id">
                                        詳情
                                    </button> |
                                    <button class="btn btn-primary btn-sm" v-on:click="editOrder(@item.Id)" type="button">編輯</button>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="12" style="color: black;vertical-align: middle;">
                                    <!-- 手風琴內容區域 -->
                                    <div id="orderItems-@item.Id" class="accordion-collapse collapse " v-bind:class="{ show: visibleDetails === @item.Id }">
                                        <div class="card card-body">
                                            <h3 class="card-title">訂單明細 (訂單號碼: @item.No)</h3>
                                            <table>
                                                <thead>
                                                    <tr>
                                                        <th>收件人姓名</th>
                                                        <th>收件地址</th>
                                                        <th>聯絡電話</th>
                                                        <th>付款方式</th>
                                                        <th>取貨方式</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td >
                                                            <input v-if="editableOrderId === @item.Id" type="text" v-model="orders.find(o => o.Id === @item.Id).RecipientName" class="form-control" />
                                                            <input v-else v-model="orders.find(o => o.Id === @item.Id).RecipientName" class="form-control" style="border: none; outline: none; text-align: center;color: black;" />
                                                        </td>
                                                        <td>
                                                            <input v-if="editableOrderId === @item.Id" type="text" v-model="orders.find(o => o.Id === @item.Id).ShippingAddress" class="form-control" />
                                                            <input v-else v-model="orders.find(o => o.Id === @item.Id).ShippingAddress" class="form-control" style="border: none; outline: none; text-align: center; color: black;" />
                                                        </td>
                                                        <td>
                                                            <input v-if="editableOrderId === @item.Id" type="text" v-model="orders.find(o => o.Id === @item.Id).Phone" class="form-control" />
                                                            <input v-else v-model="orders.find(o => o.Id === @item.Id).Phone" class="form-control" style="border: none; outline: none; text-align: center; color: black; " />
                                                        </td>
                                                        <td style="vertical-align: middle;">{{ getPaymentMethodText(@item.PaymentMethod) }}</td>
                                                        <td style="vertical-align: middle;">{{ getShippingMethod(@item.ShippingMethod) }}</td>
                                                     </tr>
                                                </tbody>
                                            </table>
                                            <br />
                                            <table class="table table-bordered" style="color: black;">
                                                <thead>
                                                    <tr>
                                                        <th>商品名稱</th>
                                                        <th>規格</th>
                                                        <th>單價</th>
                                                        <th>數量</th>
                                                        <th>小計</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var detail in item.OrderItems)
                                                    {
                                                        <tr>
                                                            <td class="text-left">@detail.ProductName</td>
                                                            <td class="text-center">@detail.SkuItemName</td>
                                                            <td class="text-right">{{formatCurrency(@detail.Price)}}</td>
                                                            <td class="text-right">{{formatCurrency(@detail.Qty)}}</td>
                                                            <td class="text-right">{{formatCurrency(@detail.SubTotal)}}</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                            <div v-if="editableOrderId === @item.Id" class="mt-3">
                                                <button class="btn btn-success mx-2" v-on:click="saveOrder(@item.Id)">儲存</button>
                                                <button class="btn btn-secondary" v-on:click="cancelEdit()">取消</button>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/vue@3"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const app = Vue.createApp({
    data() {
        return {
            orders: @Html.Raw(JsonConvert.SerializeObject(Model)), // 將模型序列化為 JSON
            visibleDetails: null,
            editableOrderId: null, // 用來跟踪可編輯的訂單 ID
            originalOrderData: {}, // 用於保存原始訂單資料
        };
    },
    methods: {
        getPaymentMethodText(PaymentMethod) {
            if (!PaymentMethod) return '未知付款方式'; // 保險措施，防止 undefined
            switch (PaymentMethod) {
                case 1:
                    return '貨到付款';
                case 2:
                    return '信用卡';
                default:
                    return '未知付款方式';
            }
        },
        getShippingMethod(ShippingMethod) {
            if (!ShippingMethod) return '未知取貨方式'; // 保險措施，防止 undefined
            switch (ShippingMethod) {
                case 1:
                    return '宅配';
                case 2:
                    return '自己';
                default:
                    return '未知付款方式';
            }
        },
        formatCurrency(value) {
            if (typeof value !== "number" || isNaN(value)) {
                return "0";
            }
            return value.toLocaleString();
        },
        editOrder(itemId) {
            
            if (this.editableOrderId === itemId) {
                this.cancelEdit();
            } else {
                // 展開手風琴
                this.visibleDetails = itemId;

                this.originalOrderData[itemId] = JSON.parse(JSON.stringify(this.orders.find(o => o.Id === itemId))); // 深拷貝
                this.editableOrderId = itemId;
                console.log('Editing order ID:', itemId);           
            }
        },
        saveOrder(orderId) {
            const updatedOrder = this.orders.find(o => o.Id === orderId);
            if (updatedOrder) {
                const csrfTokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
                const csrfToken = csrfTokenInput ? csrfTokenInput.value : '';
                fetch('/Orders/Update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': csrfToken
                    },
                    body: JSON.stringify(updatedOrder)
                }).then(response => {
                    if (response.ok) {
                        console.log('訂單更新成功！');
                        this.editableOrderId = null; // 退出編輯狀態
                    } else {
                        console.error('更新失敗！');
                    }
                }).catch(error => console.error('發生錯誤：', error));
            }
        },
        cancelEdit() {
            if (this.editableOrderId !== null) {
                const orderToRestore = this.orders.find(o => o.Id === this.editableOrderId);
                Object.assign(orderToRestore, this.originalOrderData[this.editableOrderId]);
                this.editableOrderId = null; // 退出編輯狀態
            }
        },
        toggleDetails(orderId) {
            this.visibleDetails = this.visibleDetails === orderId ? null : orderId;
        },
        isDetailsVisible(orderId) {
            return this.visibleDetails === orderId;
        },
    }
});


        app.mount("#app");
    </script>

}
